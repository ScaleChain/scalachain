plugins {
    id 'java'
    id 'kotlin'
//    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

dependencies {
    implementation project(':scalechain-api')
    implementation project(':scalechain-net')
    implementation project(':scalechain-wallet')
    implementation project(':scalechain-chain')
    implementation project(':scalechain-transaction')
    implementation project(':scalechain-storage')
    implementation project(':scalechain-script')
    implementation project(':scalechain-proto-codec')
    implementation project(':scalechain-proto')
    implementation project(':scalechain-crypto')
    implementation project(':scalechain-util')
}


/*
mainClassName = 'io.scalechain.blockchain.cli.ScaleChainPeer'

jar {
//    zip64 true

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from {
        (configurations.runtimeClasspath).collect {
//        (configurations.compileClasspath).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes("Main-Class": "io.scalechain.blockchain.cli.ScaleChainPeer" )
    }
}
*/

/*
shadowJar {
    manifest {
        attributes 'Main-Class': 'io.scalechain.blockchain.cli.ScaleChainPeer'
    }
}
*/

task runNode(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.scalechain.blockchain.cli.ScaleChainPeer'
    args System.getProperty("run.args", "").split()
    //args 'mrhaki'
    //systemProperty 'simple.message', 'Hello '
}

task runExec(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.scalechain.blockchain.cli.command.CommandExecutor'
    args System.getProperty("run.args", "").split()
    //args 'mrhaki'
    //systemProperty 'simple.message', 'Hello '
}

task runDump(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.scalechain.blockchain.cli.DumpChain'
    args System.getProperty("run.args", "").split()
    //args 'mrhaki'
    //systemProperty 'simple.message', 'Hello '
}
